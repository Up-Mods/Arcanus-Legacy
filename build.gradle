import com.modrinth.minotaur.TaskModrinthUpload

plugins {
    id 'fabric-loom' version '1.3-SNAPSHOT'
    id 'maven-publish'
    id "com.modrinth.minotaur" version '2.+'
}

def ENV = System.getenv()
def buildTime = ENV.BUILD_TIME ?: new Date().format('yyyyMMddHHmmss')

archivesBaseName = project.archives_base_name
group = project.maven_group

boolean isPreviewBuild = !ENV.TAG || ENV.TAG.matches(".+-.+")
def buildNumber = !ENV.TAG ? ("${ENV.BUILD_NUMBER ? "build.${ENV.BUILD_NUMBER}" : buildTime}-${project.minecraft_version}") : ""
version = (ENV.TAG ?: "development") + ((isPreviewBuild && !ENV.TAG) ? "+${buildNumber}" : "")

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    maven { url "https://maven.shedaniel.me" }
    maven { url "https://maven.terraformersmc.com" }
    maven { url "https://maven.ladysnake.org/releases" }
    maven { url "https://jitpack.io" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

    modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
}

loom {
    accessWidenerPath.set(project.file("src/main/resources/META-INF/arcanus.accesswidener"))
    splitEnvironmentSourceSets()

    mods {
        "arcanus" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }

}

processResources {
    inputs.property "version", project.version

    filteringCharset = "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.release = 17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

modrinth {
    if (ENV.MODRINTH_TOKEN) {
        token = ENV.MODRINTH_TOKEN
    }
    projectId = project.modrinth_id
    uploadFile = remapJar
    versionType = isPreviewBuild ? ((ENV.TAG && ENV.TAG.contains("-beta")) ? "beta" : "alpha") : "release"
    gameVersions = "${project.modrinth_game_versions}".split(",").toList()
    loaders = ["fabric", "quilt"]
}

if (ENV.MODRINTH_TOKEN) {
    tasks.publish.dependsOn(modrinth)
}
